{"expireTime":9007200858552574000,"key":"transformer-remark-markdown-html-f1cd1551979a5e5d06a2dad7a89ab9cb-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-videogatsby-remark-copy-linked-filesgatsby-remark-autolink-headersgatsby-remark-prismjs-","val":"<p>Creating a complex dashboard from scratch usually takes time and effort. Fortunately, Angular provides a tool that helps to create an application boilerplate code with just a few commands. Adding the Material library and Cube.js as an analytical API is also very easy.</p>\n<h2 id=\"installing-the-libraries\" style=\"position:relative;\"><a href=\"#installing-the-libraries\" aria-label=\"installing the libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing the libraries</h2>\n<p>So, let's use Angular CLI and create the frontend application inside the <code class=\"language-text\">angular-dashboard</code> folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @angular/cli  <span class=\"token comment\"># Install Angular CLI</span>\nng new dashboard-app         <span class=\"token comment\"># Create an app</span>\n<span class=\"token builtin class-name\">cd</span> dashboard-app             <span class=\"token comment\"># Change the folder</span>\nng serve                     <span class=\"token comment\"># Run the app</span></code></pre></div>\n<p>Congratulations! Now we have the <code class=\"language-text\">dashboard-app</code> folder in our project. This folder contains the frontend code that we're going to modify and evolve to build our analytical dashboard.</p>\n<p><strong>Now it's time to add the Material library.</strong> To install the Material library to our application, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ng <span class=\"token function\">add</span> @angular/material</code></pre></div>\n<p>Choose a custom theme and the following options:</p>\n<ul>\n<li>Set up global Angular Material typography styles? - <strong>Yes</strong></li>\n<li>Set up browser animations for Angular Material? - <strong>Yes</strong></li>\n</ul>\n<p>Great! We'll also need a charting library to add charts to the dashboard. <a href=\"https://www.chartjs.org\">Chart.js</a> is the most popular charting library, it's stable and feature-rich. So...</p>\n<p><strong>It's time to add the Chart.js library.</strong> To install it, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> ng2-charts\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> chart.js</code></pre></div>\n<p>Also, to be able to make use of <code class=\"language-text\">ng2-charts</code> directives in our Angular application we need to import <code class=\"language-text\">ChartsModule</code>. For that, we add the following import statement in the <code class=\"language-text\">app.module.ts</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> import { ChartsModule } from 'ng2-charts';</span></code></pre></div>\n<p>The second step is to add <code class=\"language-text\">ChartsModule</code> to the imports array of the <code class=\"language-text\">@NgModule</code> decorator as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">@NgModule({\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> declarations: [\n<span class=\"token prefix unchanged\"> </span>   AppComponent\n<span class=\"token prefix unchanged\"> </span> ],\n<span class=\"token prefix unchanged\"> </span> imports: [\n<span class=\"token prefix unchanged\"> </span>   BrowserModule,\n<span class=\"token prefix unchanged\"> </span>   BrowserAnimationsModule,\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    ChartsModule\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ],\n<span class=\"token prefix unchanged\"> </span> providers: [],\n<span class=\"token prefix unchanged\"> </span> bootstrap: [AppComponent]\n</span>})</code></pre></div>\n<p><strong>Finally, it's time to add Cube.js.</strong> This is the final step that will let our application access the data in our database via an analytical API is to install Cube.js client libraries for Angular. Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save @cubejs-client/ngx\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save @cubejs-client/core</code></pre></div>\n<p>Now we can add <code class=\"language-text\">CubejsClientModule</code> to your <code class=\"language-text\">app.module.ts</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">...\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> import { CubejsClientModule } from '@cubejs-client/ngx';\n</span>\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> const cubejsOptions = {\n<span class=\"token prefix inserted\">+</span>   token: 'YOUR-CUBEJS-API-TOKEN',\n<span class=\"token prefix inserted\">+</span>   options: { apiUrl: 'http://localhost:4200/cubejs-api/v1' }\n<span class=\"token prefix inserted\">+</span> };\n</span>\n@NgModule({\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ...\n<span class=\"token prefix unchanged\"> </span> imports: [\n<span class=\"token prefix unchanged\"> </span>    ...\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    CubejsClientModule.forRoot(cubejsOptions)\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ],\n<span class=\"token prefix unchanged\"> </span> ...\n</span>})\nexport class AppModule { }</code></pre></div>\n<p><code class=\"language-text\">CubejsClientModule</code> provides <code class=\"language-text\">CubejsClient</code> which you can inject into your components or services to make API calls and retrieve data:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CubejsClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@cubejs-client/ngx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> cubejs<span class=\"token operator\">:</span>CubejsClient</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cubejs<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      measures<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"some_measure\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">resultSet</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">chartPivot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HTTP Error'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So far so good! Let's make it live.</p>\n<h2 id=\"creating-the-first-chart\" style=\"position:relative;\"><a href=\"#creating-the-first-chart\" aria-label=\"creating the first chart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating the first chart</h2>\n<p>Let's create a generic <code class=\"language-text\">bar-chart</code> component using Angular CLI. Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ng g c bar-chart  <span class=\"token comment\"># Oh these single-letter commands!</span></code></pre></div>\n<p>This command will add four new files to our app because this is what Angular uses for its components:</p>\n<ul>\n<li><code class=\"language-text\">src/app/bar-chart/bar-chart.component.html</code></li>\n<li><code class=\"language-text\">src/app/bar-chart/bar-chart.component.ts</code></li>\n<li><code class=\"language-text\">src/app/bar-chart/bar-chart.component.scss</code></li>\n<li><code class=\"language-text\">src/app/bar-chart/bar-chart.component.spec.ts</code></li>\n</ul>\n<p>Open <code class=\"language-text\">bar-chart.component.html</code> and replace the content of that file with the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">baseChart</span>\n\t\t\t\t\t\t<span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>320<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[datasets]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barChartData<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[labels]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barChartLabels<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[options]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barChartOptions<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[legend]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barChartLegend<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">[chartType]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>barChartType<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Here we’re using the <code class=\"language-text\">baseChart</code> directive which is added to a canvas element. Furthermore, the <code class=\"language-text\">datasets</code>, <code class=\"language-text\">labels</code>, <code class=\"language-text\">options</code>, <code class=\"language-text\">legend</code>, and <code class=\"language-text\">chartType</code> attributes are bound to class members which are added to the implementation of the <code class=\"language-text\">BarChartComponent</code> class in <code class=\"language-text\">bar-chart-component.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit<span class=\"token punctuation\">,</span> Input <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CubejsClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@cubejs-client/ngx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>formatDate<span class=\"token punctuation\">,</span> registerLocaleData<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/common\"</span>\n<span class=\"token keyword\">import</span> localeEn <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/common/locales/en'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">registerLocaleData</span><span class=\"token punctuation\">(</span>localeEn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">\"app-bar-chart\"</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">\"./bar-chart.component.html\"</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./bar-chart.component.scss\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BarChartComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> query<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">private</span> cubejs<span class=\"token operator\">:</span>CubejsClient</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> barChartOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    responsive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    maintainAspectRatio<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    legend<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    cornerRadius<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n    tooltips<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      enabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      mode<span class=\"token operator\">:</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span>\n      intersect<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      borderWidth<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      borderColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#eeeeee\"</span><span class=\"token punctuation\">,</span>\n      backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span><span class=\"token punctuation\">,</span>\n      titleFontColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#43436B\"</span><span class=\"token punctuation\">,</span>\n      bodyFontColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#A1A1B5\"</span><span class=\"token punctuation\">,</span>\n      footerFontColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#A1A1B5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    layout<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    scales<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      xAxes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          barThickness<span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n          maxBarThickness<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n          barPercentage<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n          categoryPercentage<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n          ticks<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            fontColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#A1A1B5\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          gridLines<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            display<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            drawBorder<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      yAxes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          ticks<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            fontColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#A1A1B5\"</span><span class=\"token punctuation\">,</span>\n            beginAtZero<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            min<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          gridLines<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            borderDash<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            borderDashOffset<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            color<span class=\"token operator\">:</span> <span class=\"token string\">\"#eeeeee\"</span><span class=\"token punctuation\">,</span>\n            drawBorder<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            zeroLineBorderDash<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            zeroLineBorderDashOffset<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            zeroLineColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#eeeeee\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> barChartLabels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> barChartType <span class=\"token operator\">=</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> barChartLegend <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> barChartData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cubejs<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">resultSet</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token constant\">COLORS_SERIES</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#FF6492'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#F3F3FB'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#FFA2BE'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>barChartLabels <span class=\"token operator\">=</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">chartPivot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">,</span> <span class=\"token string\">'longDate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'en'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>barChartData <span class=\"token operator\">=</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          label<span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n          data<span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span>series<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          backgroundColor<span class=\"token operator\">:</span> <span class=\"token constant\">COLORS_SERIES</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          fill<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HTTP Error'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Okay, we have the code for our chart, let's show it in the app. We can use an Angular command to generate a base grid. Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ng generate @angular/material:dashboard dashboard-page</code></pre></div>\n<p>So, now we have a folder with the <code class=\"language-text\">dashboard-page</code> component. Open <code class=\"language-text\">app.component.html</code> and insert this code:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-dashboard-page</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-dashboard-page</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Now it's time to open <code class=\"language-text\">dashboard-page/dashobard-page.component.html</code> and add our component like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token deleted-arrow deleted\"><span class=\"token prefix deleted\"><</span>div class=\"grid-container\">\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> &lt;h1 class=\"mat-h1\">Dashboard&lt;/h1>\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  &lt;mat-grid-list cols=\"2\" rowHeight=\"450px\">\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    &lt;mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    &lt;mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>     &lt;mat-card class=\"dashboard-card\">\n<span class=\"token prefix unchanged\"> </span>       &lt;mat-card-header>\n<span class=\"token prefix unchanged\"> </span>         &lt;mat-card-title>\n<span class=\"token prefix unchanged\"> </span>           &lt;button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n<span class=\"token prefix unchanged\"> </span>             &lt;mat-icon>more_vert&lt;/mat-icon>\n<span class=\"token prefix unchanged\"> </span>           &lt;/button>\n<span class=\"token prefix unchanged\"> </span>           &lt;mat-menu #menu=\"matMenu\" xPosition=\"before\">\n<span class=\"token prefix unchanged\"> </span>             &lt;button mat-menu-item>Expand&lt;/button>\n<span class=\"token prefix unchanged\"> </span>             &lt;button mat-menu-item>Remove&lt;/button>\n<span class=\"token prefix unchanged\"> </span>           &lt;/mat-menu>\n<span class=\"token prefix unchanged\"> </span>         &lt;/mat-card-title>\n<span class=\"token prefix unchanged\"> </span>       &lt;/mat-card-header>\n<span class=\"token prefix unchanged\"> </span>       &lt;mat-card-content class=\"dashboard-card-content\">\n<span class=\"token prefix unchanged\"> </span>         &lt;div>\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>            &lt;app-bar-chart [query]=\"card.query\" *ngIf=\"card.chart === 'bar'\">&lt;/app-bar-chart>\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>         &lt;/div>\n<span class=\"token prefix unchanged\"> </span>       &lt;/mat-card-content>\n<span class=\"token prefix unchanged\"> </span>     &lt;/mat-card>\n<span class=\"token prefix unchanged\"> </span>   &lt;/mat-grid-tile>\n<span class=\"token prefix unchanged\"> </span> &lt;/mat-grid-list>\n</span><span class=\"token deleted-arrow deleted\"><span class=\"token prefix deleted\"><</span>/div></span></code></pre></div>\n<p>And the last edit will be in <code class=\"language-text\">dashboard-page.component.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@angular/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BehaviorSubject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"rxjs\"</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">\"app-dashboard-page\"</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">\"./dashboard-page.component.html\"</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./dashboard-page.component.scss\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DashboardPageComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> query <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BehaviorSubject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    measures<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Orders.count\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    timeDimensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> dimension<span class=\"token operator\">:</span> <span class=\"token string\">\"Orders.createdAt\"</span><span class=\"token punctuation\">,</span> granularity<span class=\"token operator\">:</span> <span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> dateRange<span class=\"token operator\">:</span> <span class=\"token string\">\"This year\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    dimensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Orders.status\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    filters<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> dimension<span class=\"token operator\">:</span> <span class=\"token string\">\"Orders.status\"</span><span class=\"token punctuation\">,</span> operator<span class=\"token operator\">:</span> <span class=\"token string\">\"notEquals\"</span><span class=\"token punctuation\">,</span> values<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cards <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cards<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        chart<span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span> cols<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> rows<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        query<span class=\"token operator\">:</span> data\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nice work! 🎉 That's all we need to display our first chart with the data loaded from Postgres via Cube.js. </p>\n<p><img src=\"https://d2cq47x6codx9u.cloudfront.net/images/image-51.png\"></p>\n<p>In the next part, we'll make this chart interactive by letting users change the date range from \"This year\" to other predefined values.</p>"}